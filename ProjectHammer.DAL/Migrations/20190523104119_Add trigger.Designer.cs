// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectHammer.DAL;

namespace ProjectHammer.DAL.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20190523104119_Add trigger")]
    partial class Addtrigger
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectHammer.DAL.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentNo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentLocation")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(20);

                    b.HasKey("DepartmentNo");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentNo = 1,
                            DepartmentLocation = "London",
                            DepartmentName = "Development"
                        },
                        new
                        {
                            DepartmentNo = 2,
                            DepartmentLocation = "Zurich",
                            DepartmentName = "Development"
                        },
                        new
                        {
                            DepartmentNo = 3,
                            DepartmentLocation = "Osijek",
                            DepartmentName = "Development"
                        },
                        new
                        {
                            DepartmentNo = 4,
                            DepartmentLocation = "London",
                            DepartmentName = "Sales"
                        },
                        new
                        {
                            DepartmentNo = 5,
                            DepartmentLocation = "Zurich",
                            DepartmentName = "Sales"
                        },
                        new
                        {
                            DepartmentNo = 6,
                            DepartmentLocation = "Osijek",
                            DepartmentName = "Sales"
                        },
                        new
                        {
                            DepartmentNo = 7,
                            DepartmentLocation = "Basel",
                            DepartmentName = "Sales"
                        },
                        new
                        {
                            DepartmentNo = 8,
                            DepartmentLocation = "Lugano",
                            DepartmentName = "Sales"
                        });
                });

            modelBuilder.Entity("ProjectHammer.DAL.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeNo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentNo");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("LastModifyDate");

                    b.Property<float>("Salary");

                    b.HasKey("EmployeeNo");

                    b.HasIndex("DepartmentNo");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeNo = 1,
                            DepartmentNo = 4,
                            EmployeeName = "Fred Davies",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(1405),
                            Salary = 50000f
                        },
                        new
                        {
                            EmployeeNo = 2,
                            DepartmentNo = 3,
                            EmployeeName = "Bernard Katic",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(1638),
                            Salary = 50000f
                        },
                        new
                        {
                            EmployeeNo = 3,
                            DepartmentNo = 5,
                            EmployeeName = "Rich Davies",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(1737),
                            Salary = 30000f
                        },
                        new
                        {
                            EmployeeNo = 4,
                            DepartmentNo = 6,
                            EmployeeName = "Eva Dobos",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(1823),
                            Salary = 30000f
                        },
                        new
                        {
                            EmployeeNo = 5,
                            DepartmentNo = 8,
                            EmployeeName = "Mario Hunjadi",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(1911),
                            Salary = 25000f
                        },
                        new
                        {
                            EmployeeNo = 6,
                            DepartmentNo = 7,
                            EmployeeName = "Jean Michele",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(1997),
                            Salary = 25000f
                        },
                        new
                        {
                            EmployeeNo = 7,
                            DepartmentNo = 1,
                            EmployeeName = "Bill Gates",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(2084),
                            Salary = 25000f
                        },
                        new
                        {
                            EmployeeNo = 8,
                            DepartmentNo = 3,
                            EmployeeName = "Maja Janic",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(2168),
                            Salary = 30000f
                        },
                        new
                        {
                            EmployeeNo = 9,
                            DepartmentNo = 3,
                            EmployeeName = "Igor Horvat",
                            LastModifyDate = new DateTime(2019, 5, 23, 12, 41, 19, 186, DateTimeKind.Local).AddTicks(2532),
                            Salary = 35000f
                        });
                });

            modelBuilder.Entity("ProjectHammer.DAL.Entities.Login", b =>
                {
                    b.Property<int>("LoginNo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginPassword")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LoginUserName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("LoginNo");

                    b.ToTable("Login");

                    b.HasData(
                        new
                        {
                            LoginNo = 1,
                            LoginPassword = "ItsNotSoft",
                            LoginUserName = "Bill"
                        },
                        new
                        {
                            LoginNo = 2,
                            LoginPassword = "trollsRule",
                            LoginUserName = "Jean"
                        });
                });

            modelBuilder.Entity("ProjectHammer.DAL.Entities.Employee", b =>
                {
                    b.HasOne("ProjectHammer.DAL.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
